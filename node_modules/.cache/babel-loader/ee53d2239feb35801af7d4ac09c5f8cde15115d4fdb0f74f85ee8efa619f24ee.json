{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\usepopcorn\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import { useEffect, useRef, useState } from \"react\";\n// import StarRating from \"./StarRating\";\n// import { useMovies } from \"./useMovies\";\n// import { useLocalStorageState } from \"./useLocalStorageState\";\n// import { useKey } from \"./useKey\";\n\n// const average = (arr) =>\n//   arr.reduce((acc, cur, i, arr) => acc + cur / arr.length, 0);\n\n// const KEY = \"c93a834b\";\n\n// export default function App() {\n//   const [query, setQuery] = useState(\"\");\n//   const [selectedId, setSelectedId] = useState(null);\n\n//   function handleSelectMovie(id) {\n//     setSelectedId((s) => (s === id ? null : id));\n//   }\n\n//   function handleCloseMovie() {\n//     setSelectedId(null);\n//   }\n\n//   function handleAddWatched(movie) {\n//     setWatched((s) => [...s, movie]);\n//   }\n\n//   function handleDeleteWatched(id) {\n//     setWatched((watched) => watched.filter((movie) => movie.imdbID !== id));\n//   }\n\n//   const { isLoading, error, movies } = useMovies(query);\n//   const [watched, setWatched] = useLocalStorageState([], \"watched\");\n\n//   return (\n//     <>\n//       <Nav>\n//         <Search query={query} setQuery={setQuery} />\n//         <Numresults movies={movies} />\n//       </Nav>\n//       <Main>\n//         <Box>\n//           {isLoading && <Loader />}\n//           {!isLoading && !error && (\n//             <MovieList movies={movies} onSelectMovie={handleSelectMovie} />\n//           )}\n//           {error && <ErrorMsg msg={error} />}\n//         </Box>\n//         <Box>\n//           {selectedId ? (\n//             <MovieDetails\n//               id={selectedId}\n//               onCloseMovie={handleCloseMovie}\n//               onAddWatched={handleAddWatched}\n//               watched={watched}\n//             />\n//           ) : (\n//             <>\n//               <WatchedSummary watched={watched} />\n//               <WatchedMoviesList\n//                 watched={watched}\n//                 onDeleteWatched={handleDeleteWatched}\n//               />\n//             </>\n//           )}\n//         </Box>\n//       </Main>\n//     </>\n//   );\n// }\n\n// function Loader() {\n//   return <p className=\"loader\">Loading...</p>;\n// }\n\n// function ErrorMsg({ msg }) {\n//   return (\n//     <p className=\"error\">\n//       <span>‚õî</span> {msg}\n//     </p>\n//   );\n// }\n\n// function Nav({ children }) {\n//   return (\n//     <nav className=\"nav-bar\">\n//       <Logo />\n//       {children}\n//     </nav>\n//   );\n// }\n\n// function Logo() {\n//   return (\n//     <div className=\"logo\">\n//       <span role=\"img\">üçø</span>\n//       <h1>usePopcorn</h1>\n//     </div>\n//   );\n// }\n\n// function Search({ query, setQuery }) {\n//   const inputEl = useRef(null);\n//   useKey(\"Enter\", function () {\n//     if (document.activeElement === inputEl.current) return;\n//     inputEl.current.focus();\n//     setQuery(\"\");\n//   });\n\n//   return (\n//     <input\n//       className=\"search\"\n//       type=\"text\"\n//       placeholder=\"Search movies...\"\n//       value={query}\n//       onChange={(e) => setQuery(e.target.value)}\n//       ref={inputEl}\n//     />\n//   );\n// }\n\n// function Numresults({ movies }) {\n//   return (\n//     <p className=\"num-results\">\n//       Found <strong>{movies.length}</strong> results\n//     </p>\n//   );\n// }\n\n// function Main({ children }) {\n//   return <main className=\"main\">{children}</main>;\n// }\n\n// function Box({ children }) {\n//   const [isOpen, setIsOpen] = useState(true);\n\n//   return (\n//     <div className=\"box\">\n//       <button className=\"btn-toggle\" onClick={() => setIsOpen((open) => !open)}>\n//         {isOpen ? \"‚Äì\" : \"+\"}\n//       </button>\n//       {isOpen && children}\n//     </div>\n//   );\n// }\n\n// function MovieList({ movies, onSelectMovie }) {\n//   return (\n//     <ul className=\"list list-movies\">\n//       {movies?.map((movie) => (\n//         <Movie movie={movie} key={movie.imdbID} onSelectMovie={onSelectMovie} />\n//       ))}\n//     </ul>\n//   );\n// }\n\n// function Movie({ movie, onSelectMovie }) {\n//   return (\n//     <li onClick={() => onSelectMovie(movie.imdbID)}>\n//       <img src={movie.Poster} alt={`${movie.Title} poster`} />\n//       <h3>{movie.Title}</h3>\n//       <div>\n//         <p>\n//           <span>üóì</span>\n//           <span>{movie.Year}</span>\n//         </p>\n//       </div>\n//     </li>\n//   );\n// }\n\n// function MovieDetails({ id, onCloseMovie, onAddWatched, watched }) {\n//   const [movie, setMovie] = useState({});\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [userRating, setUserRating] = useState(\"\");\n//   const isWatched = watched.map((movie) => movie.imdbID).includes(id);\n//   const countRef = useRef(0);\n//   useEffect(\n//     function () {\n//       if (userRating) countRef.current++;\n//     },\n//     [userRating]\n//   );\n//   const {\n//     Title: title,\n//     Released: released,\n//     Runtime: runtime,\n//     Poster: poster,\n//     Plot: plot,\n//     imdbRating,\n//     Actors: actors,\n//     Director: director,\n//     Genre: genre,\n//   } = movie;\n\n//   function handleAddButton() {\n//     const newMovie = {\n//       title,\n//       poster,\n//       runtime: Number(runtime.split(\" \").at(0)),\n//       imdbRating: Number(imdbRating),\n//       imdbID: id,\n//       userRating,\n//       countRef,\n//     };\n//     onAddWatched(newMovie);\n//     onCloseMovie();\n//   }\n\n//   useKey(\"Escape\", onCloseMovie);\n\n//   useEffect(\n//     function () {\n//       async function fetchById() {\n//         setIsLoading(true);\n//         const res = await fetch(\n//           `http://www.omdbapi.com/?apikey=${KEY}&i=${id}`\n//         );\n//         const data = await res.json();\n//         setMovie(data);\n//         setIsLoading(false);\n//       }\n//       fetchById();\n//     },\n//     [id]\n//   );\n\n//   useEffect(\n//     function () {\n//       if (!title) return;\n//       document.title = `Movie | ${title}`;\n//       return function () {\n//         document.title = \"usePopcorn\";\n//       };\n//     },\n//     [title]\n//   );\n\n//   return (\n//     <div className=\"details\">\n//       {isLoading ? (\n//         <Loader />\n//       ) : (\n//         <>\n//           <header>\n//             <button className=\"btn-back\" onClick={onCloseMovie}>\n//               &larr;\n//             </button>\n//             <img src={poster} alt={`${title} movie`} />\n//             <div className=\"details-overview\">\n//               <h2>{title}</h2>\n//               <p>\n//                 {released} &bull; {runtime}\n//               </p>\n//               <p>{genre}</p>\n//               <p>\n//                 <span>‚≠ê</span>\n//                 {imdbRating} IMDB rating\n//               </p>\n//             </div>\n//           </header>\n//           <section>\n//             <div className=\"rating\">\n//               {isWatched ? (\n//                 <p>\n//                   You already rated this movie ‚≠ê\n//                   {watched.filter((movie) => movie.imdbID === id)[0].userRating}\n//                 </p>\n//               ) : (\n//                 <>\n//                   <StarRating\n//                     maxRating={10}\n//                     onSetRating={setUserRating}\n//                     size={24}\n//                   />\n//                   {userRating && (\n//                     <button className=\"btn-add\" onClick={handleAddButton}>\n//                       + Add to watched list\n//                     </button>\n//                   )}\n//                 </>\n//               )}\n//             </div>\n//             <p>\n//               <em>{plot}</em>\n//             </p>\n//             <p>Starring {actors}</p>\n//             <p>Directed by {director}</p>\n//           </section>\n//         </>\n//       )}\n//     </div>\n//   );\n// }\n\n// function WatchedSummary({ watched }) {\n//   const avgImdbRating = average(watched.map((movie) => movie.imdbRating));\n//   const avgUserRating = average(watched.map((movie) => movie.userRating));\n//   const avgRuntime = average(watched.map((movie) => movie.runtime));\n\n//   return (\n//     <div className=\"summary\">\n//       <h2>Movies you watched</h2>\n//       <div>\n//         <p>\n//           <span>#Ô∏è‚É£</span>\n//           <span>{watched.length} movies</span>\n//         </p>\n//         <p>\n//           <span>‚≠êÔ∏è</span>\n//           <span>{avgImdbRating.toFixed(2)}</span>\n//         </p>\n//         <p>\n//           <span>üåü</span>\n//           <span>{avgUserRating.toFixed(2)}</span>\n//         </p>\n//         <p>\n//           <span>‚è≥</span>\n//           <span>{avgRuntime} min</span>\n//         </p>\n//       </div>\n//     </div>\n//   );\n// }\n\n// function WatchedMoviesList({ watched, onDeleteWatched }) {\n//   return (\n//     <ul className=\"list\">\n//       {watched.map((movie) => (\n//         <WatchedMovie\n//           movie={movie}\n//           key={movie.imdbID}\n//           onDeleteWatched={onDeleteWatched}\n//         />\n//       ))}\n//     </ul>\n//   );\n// }\n\n// function WatchedMovie({ movie, onDeleteWatched }) {\n//   return (\n//     <li>\n//       <img src={movie.poster} alt={`${movie.title} poster`} />\n//       <h3>{movie.title}</h3>\n//       <div>\n//         <p>\n//           <span>‚≠êÔ∏è</span>\n//           <span>{movie.imdbRating}</span>\n//         </p>\n//         <p>\n//           <span>üåü</span>\n//           <span>{movie.userRating}</span>\n//         </p>\n//         <p>\n//           <span>‚è≥</span>\n//           <span>{movie.runtime} min</span>\n//         </p>\n//         <button\n//           className=\"btn-delete\"\n//           onClick={() => onDeleteWatched(movie.imdbID)}\n//         >\n//           X\n//         </button>\n//       </div>\n//     </li>\n//   );\n// }\n\n// // *********************************************\n\n// // import { useState } from \"react\";\n// // import \"./style.css\";\n\n// // export default function App() {\n// //   return (\n// //     <div>\n// //       <TextExpander>\n// //         Space travel is the ultimate adventure! Imagine soaring past the stars\n// //         and exploring new worlds. It's the stuff of dreams and science fiction,\n// //         but believe it or not, space travel is a real thing. Humans and robots\n// //         are constantly venturing out into the cosmos to uncover its secrets and\n// //         push the boundaries of what's possible.\n// //       </TextExpander>\n\n// //       <TextExpander\n// //         collapsedNumWords={20}\n// //         expandButtonText=\"Show text\"\n// //         collapseButtonText=\"Collapse text\"\n// //         buttonColor=\"#ff6622\"\n// //       >\n// //         Space travel requires some seriously amazing technology and\n// //         collaboration between countries, private companies, and international\n// //         space organizations. And while it's not always easy (or cheap), the\n// //         results are out of this world. Think about the first time humans stepped\n// //         foot on the moon or when rovers were sent to roam around on Mars.\n// //       </TextExpander>\n\n// //       <TextExpander expanded={true} className=\"box\">\n// //         Space missions have given us incredible insights into our universe and\n// //         have inspired future generations to keep reaching for the stars. Space\n// //         travel is a pretty cool thing to think about. Who knows what we'll\n// //         discover next!\n// //       </TextExpander>\n// //     </div>\n// //   );\n// // }\n\n// // function TextExpander({\n// //   children,\n// //   collapsedNumWords = 10,\n// //   expandButtonText = \"Show more\",\n// //   collapseButtonText = \"Show less\",\n// //   buttonColor = \"#1f09cd\",\n// //   expanded = false,\n// //   className = \"\",\n// // }) {\n// //   const [isExpanded, setIsExpanded] = useState(expanded);\n// //   const displayText = isExpanded\n// //     ? children\n// //     : children.split(\" \").slice(0, collapsedNumWords).join(\" \") + \"...\";\n// //   const buttonStyle = {\n// //     border: \"none\",\n// //     backgroundColor: \"none\",\n// //     color: `${buttonColor}`,\n// //     marginLeft: \"6px\",\n// //     cursor: \"pointer\",\n// //     font: \"inherit\",\n// //   };\n// //   return (\n// //     <div className={className}>\n// //       <span>{displayText}</span>\n// //       <button style={buttonStyle} onClick={() => setIsExpanded((exp) => !exp)}>\n// //         {isExpanded ? collapseButtonText : expandButtonText}\n// //       </button>\n// //     </div>\n// //   );\n// // }\n\n// **********************************\n\n// `https://api.frankfurter.app/latest?amount=100&from=EUR&to=USD`\n\n// export default function App() {\n//   const [amount, setAmount] = useState(1);\n//   const [fromCurr, setFromCurr] = useState(\"USD\");\n//   const [toCurr, setToCurr] = useState(\"EUR\");\n//   const [output, setOutput] = useState(\"\");\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   useEffect(\n//     function () {\n//       async function fetchData() {\n//         if (toCurr === fromCurr) {\n//           setOutput(amount);\n//           return;\n//         }\n//         setIsLoading(true);\n//         const res = await fetch(\n//           `https://api.frankfurter.app/latest?amount=${amount}&from=${fromCurr}&to=${toCurr}`\n//         );\n//         const data = await res.json();\n\n//         setOutput(data.rates[toCurr].toFixed(3));\n//         setIsLoading(false);\n//       }\n//       fetchData();\n//     },\n//     [amount, fromCurr, toCurr]\n//   );\n\n//   return (\n//     <div>\n//       <input\n//         type=\"text\"\n//         value={amount}\n//         onChange={(e) => setAmount(+e.target.value)}\n//         disabled={isLoading}\n//       />\n//       <select\n//         value={fromCurr}\n//         onChange={(e) => setFromCurr(e.target.value)}\n//         disabled={isLoading}\n//       >\n//         <option value=\"USD\">USD</option>\n//         <option value=\"EUR\">EUR</option>\n//         <option value=\"CAD\">CAD</option>\n//         <option value=\"INR\">INR</option>\n//       </select>\n//       <select\n//         value={toCurr}\n//         onChange={(e) => setToCurr(e.target.value)}\n//         disabled={isLoading}\n//       >\n//         <option value=\"USD\">USD</option>\n//         <option value=\"EUR\">EUR</option>\n//         <option value=\"CAD\">CAD</option>\n//         <option value=\"INR\">INR</option>\n//       </select>\n//       <p>\n//         {output} {toCurr}\n//       </p>\n//     </div>\n//   );\n// }\n\n// *****************************\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction useGeolocation() {\n  _s();\n  const [error, setError] = useState(null);\n  const [position, setPosition] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  function getPosition() {\n    if (!navigator.geolocation) return setError(\"Your browser does not support geolocation\");\n    setIsLoading(true);\n    navigator.geolocation.getCurrentPosition(pos => {\n      setPosition({\n        lat: pos.coords.latitude,\n        lng: pos.coords.longitude\n      });\n      setIsLoading(false);\n    }, error => {\n      setError(error.message);\n      setIsLoading(false);\n    });\n  }\n  return {\n    error,\n    position,\n    isLoading,\n    getPosition\n  };\n}\n_s(useGeolocation, \"cqWVSyPURMlbXmTX+HbFKufdyWg=\");\nexport default function App() {\n  _s2();\n  const [countClicks, setCountClicks] = useState(0);\n  const {\n    error,\n    position: {\n      lat,\n      lng\n    },\n    isLoading,\n    getPosition\n  } = useGeolocation();\n  // const { lat, lng } = position;\n\n  function handleClick() {\n    setCountClicks(count => count + 1);\n    getPosition();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      disabled: isLoading,\n      children: \"Get my position\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading position...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 17\n    }, this), !isLoading && !error && lat && lng && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your GPS position:\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        href: `https://www.openstreetmap.org/#map=16/${lat}/${lng}`,\n        children: [lat, \", \", lng]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You requested position \", countClicks, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 553,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"wTXLL50xVgtpfGiK+Kuz3PYRxSQ=\", false, function () {\n  return [useGeolocation];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","useGeolocation","_s","error","setError","position","setPosition","isLoading","setIsLoading","getPosition","navigator","geolocation","getCurrentPosition","pos","lat","coords","latitude","lng","longitude","message","App","_s2","countClicks","setCountClicks","handleClick","count","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","target","rel","href","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/Desktop/usepopcorn/src/App.js"],"sourcesContent":["// import { useEffect, useRef, useState } from \"react\";\n// import StarRating from \"./StarRating\";\n// import { useMovies } from \"./useMovies\";\n// import { useLocalStorageState } from \"./useLocalStorageState\";\n// import { useKey } from \"./useKey\";\n\n// const average = (arr) =>\n//   arr.reduce((acc, cur, i, arr) => acc + cur / arr.length, 0);\n\n// const KEY = \"c93a834b\";\n\n// export default function App() {\n//   const [query, setQuery] = useState(\"\");\n//   const [selectedId, setSelectedId] = useState(null);\n\n//   function handleSelectMovie(id) {\n//     setSelectedId((s) => (s === id ? null : id));\n//   }\n\n//   function handleCloseMovie() {\n//     setSelectedId(null);\n//   }\n\n//   function handleAddWatched(movie) {\n//     setWatched((s) => [...s, movie]);\n//   }\n\n//   function handleDeleteWatched(id) {\n//     setWatched((watched) => watched.filter((movie) => movie.imdbID !== id));\n//   }\n\n//   const { isLoading, error, movies } = useMovies(query);\n//   const [watched, setWatched] = useLocalStorageState([], \"watched\");\n\n//   return (\n//     <>\n//       <Nav>\n//         <Search query={query} setQuery={setQuery} />\n//         <Numresults movies={movies} />\n//       </Nav>\n//       <Main>\n//         <Box>\n//           {isLoading && <Loader />}\n//           {!isLoading && !error && (\n//             <MovieList movies={movies} onSelectMovie={handleSelectMovie} />\n//           )}\n//           {error && <ErrorMsg msg={error} />}\n//         </Box>\n//         <Box>\n//           {selectedId ? (\n//             <MovieDetails\n//               id={selectedId}\n//               onCloseMovie={handleCloseMovie}\n//               onAddWatched={handleAddWatched}\n//               watched={watched}\n//             />\n//           ) : (\n//             <>\n//               <WatchedSummary watched={watched} />\n//               <WatchedMoviesList\n//                 watched={watched}\n//                 onDeleteWatched={handleDeleteWatched}\n//               />\n//             </>\n//           )}\n//         </Box>\n//       </Main>\n//     </>\n//   );\n// }\n\n// function Loader() {\n//   return <p className=\"loader\">Loading...</p>;\n// }\n\n// function ErrorMsg({ msg }) {\n//   return (\n//     <p className=\"error\">\n//       <span>‚õî</span> {msg}\n//     </p>\n//   );\n// }\n\n// function Nav({ children }) {\n//   return (\n//     <nav className=\"nav-bar\">\n//       <Logo />\n//       {children}\n//     </nav>\n//   );\n// }\n\n// function Logo() {\n//   return (\n//     <div className=\"logo\">\n//       <span role=\"img\">üçø</span>\n//       <h1>usePopcorn</h1>\n//     </div>\n//   );\n// }\n\n// function Search({ query, setQuery }) {\n//   const inputEl = useRef(null);\n//   useKey(\"Enter\", function () {\n//     if (document.activeElement === inputEl.current) return;\n//     inputEl.current.focus();\n//     setQuery(\"\");\n//   });\n\n//   return (\n//     <input\n//       className=\"search\"\n//       type=\"text\"\n//       placeholder=\"Search movies...\"\n//       value={query}\n//       onChange={(e) => setQuery(e.target.value)}\n//       ref={inputEl}\n//     />\n//   );\n// }\n\n// function Numresults({ movies }) {\n//   return (\n//     <p className=\"num-results\">\n//       Found <strong>{movies.length}</strong> results\n//     </p>\n//   );\n// }\n\n// function Main({ children }) {\n//   return <main className=\"main\">{children}</main>;\n// }\n\n// function Box({ children }) {\n//   const [isOpen, setIsOpen] = useState(true);\n\n//   return (\n//     <div className=\"box\">\n//       <button className=\"btn-toggle\" onClick={() => setIsOpen((open) => !open)}>\n//         {isOpen ? \"‚Äì\" : \"+\"}\n//       </button>\n//       {isOpen && children}\n//     </div>\n//   );\n// }\n\n// function MovieList({ movies, onSelectMovie }) {\n//   return (\n//     <ul className=\"list list-movies\">\n//       {movies?.map((movie) => (\n//         <Movie movie={movie} key={movie.imdbID} onSelectMovie={onSelectMovie} />\n//       ))}\n//     </ul>\n//   );\n// }\n\n// function Movie({ movie, onSelectMovie }) {\n//   return (\n//     <li onClick={() => onSelectMovie(movie.imdbID)}>\n//       <img src={movie.Poster} alt={`${movie.Title} poster`} />\n//       <h3>{movie.Title}</h3>\n//       <div>\n//         <p>\n//           <span>üóì</span>\n//           <span>{movie.Year}</span>\n//         </p>\n//       </div>\n//     </li>\n//   );\n// }\n\n// function MovieDetails({ id, onCloseMovie, onAddWatched, watched }) {\n//   const [movie, setMovie] = useState({});\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [userRating, setUserRating] = useState(\"\");\n//   const isWatched = watched.map((movie) => movie.imdbID).includes(id);\n//   const countRef = useRef(0);\n//   useEffect(\n//     function () {\n//       if (userRating) countRef.current++;\n//     },\n//     [userRating]\n//   );\n//   const {\n//     Title: title,\n//     Released: released,\n//     Runtime: runtime,\n//     Poster: poster,\n//     Plot: plot,\n//     imdbRating,\n//     Actors: actors,\n//     Director: director,\n//     Genre: genre,\n//   } = movie;\n\n//   function handleAddButton() {\n//     const newMovie = {\n//       title,\n//       poster,\n//       runtime: Number(runtime.split(\" \").at(0)),\n//       imdbRating: Number(imdbRating),\n//       imdbID: id,\n//       userRating,\n//       countRef,\n//     };\n//     onAddWatched(newMovie);\n//     onCloseMovie();\n//   }\n\n//   useKey(\"Escape\", onCloseMovie);\n\n//   useEffect(\n//     function () {\n//       async function fetchById() {\n//         setIsLoading(true);\n//         const res = await fetch(\n//           `http://www.omdbapi.com/?apikey=${KEY}&i=${id}`\n//         );\n//         const data = await res.json();\n//         setMovie(data);\n//         setIsLoading(false);\n//       }\n//       fetchById();\n//     },\n//     [id]\n//   );\n\n//   useEffect(\n//     function () {\n//       if (!title) return;\n//       document.title = `Movie | ${title}`;\n//       return function () {\n//         document.title = \"usePopcorn\";\n//       };\n//     },\n//     [title]\n//   );\n\n//   return (\n//     <div className=\"details\">\n//       {isLoading ? (\n//         <Loader />\n//       ) : (\n//         <>\n//           <header>\n//             <button className=\"btn-back\" onClick={onCloseMovie}>\n//               &larr;\n//             </button>\n//             <img src={poster} alt={`${title} movie`} />\n//             <div className=\"details-overview\">\n//               <h2>{title}</h2>\n//               <p>\n//                 {released} &bull; {runtime}\n//               </p>\n//               <p>{genre}</p>\n//               <p>\n//                 <span>‚≠ê</span>\n//                 {imdbRating} IMDB rating\n//               </p>\n//             </div>\n//           </header>\n//           <section>\n//             <div className=\"rating\">\n//               {isWatched ? (\n//                 <p>\n//                   You already rated this movie ‚≠ê\n//                   {watched.filter((movie) => movie.imdbID === id)[0].userRating}\n//                 </p>\n//               ) : (\n//                 <>\n//                   <StarRating\n//                     maxRating={10}\n//                     onSetRating={setUserRating}\n//                     size={24}\n//                   />\n//                   {userRating && (\n//                     <button className=\"btn-add\" onClick={handleAddButton}>\n//                       + Add to watched list\n//                     </button>\n//                   )}\n//                 </>\n//               )}\n//             </div>\n//             <p>\n//               <em>{plot}</em>\n//             </p>\n//             <p>Starring {actors}</p>\n//             <p>Directed by {director}</p>\n//           </section>\n//         </>\n//       )}\n//     </div>\n//   );\n// }\n\n// function WatchedSummary({ watched }) {\n//   const avgImdbRating = average(watched.map((movie) => movie.imdbRating));\n//   const avgUserRating = average(watched.map((movie) => movie.userRating));\n//   const avgRuntime = average(watched.map((movie) => movie.runtime));\n\n//   return (\n//     <div className=\"summary\">\n//       <h2>Movies you watched</h2>\n//       <div>\n//         <p>\n//           <span>#Ô∏è‚É£</span>\n//           <span>{watched.length} movies</span>\n//         </p>\n//         <p>\n//           <span>‚≠êÔ∏è</span>\n//           <span>{avgImdbRating.toFixed(2)}</span>\n//         </p>\n//         <p>\n//           <span>üåü</span>\n//           <span>{avgUserRating.toFixed(2)}</span>\n//         </p>\n//         <p>\n//           <span>‚è≥</span>\n//           <span>{avgRuntime} min</span>\n//         </p>\n//       </div>\n//     </div>\n//   );\n// }\n\n// function WatchedMoviesList({ watched, onDeleteWatched }) {\n//   return (\n//     <ul className=\"list\">\n//       {watched.map((movie) => (\n//         <WatchedMovie\n//           movie={movie}\n//           key={movie.imdbID}\n//           onDeleteWatched={onDeleteWatched}\n//         />\n//       ))}\n//     </ul>\n//   );\n// }\n\n// function WatchedMovie({ movie, onDeleteWatched }) {\n//   return (\n//     <li>\n//       <img src={movie.poster} alt={`${movie.title} poster`} />\n//       <h3>{movie.title}</h3>\n//       <div>\n//         <p>\n//           <span>‚≠êÔ∏è</span>\n//           <span>{movie.imdbRating}</span>\n//         </p>\n//         <p>\n//           <span>üåü</span>\n//           <span>{movie.userRating}</span>\n//         </p>\n//         <p>\n//           <span>‚è≥</span>\n//           <span>{movie.runtime} min</span>\n//         </p>\n//         <button\n//           className=\"btn-delete\"\n//           onClick={() => onDeleteWatched(movie.imdbID)}\n//         >\n//           X\n//         </button>\n//       </div>\n//     </li>\n//   );\n// }\n\n// // *********************************************\n\n// // import { useState } from \"react\";\n// // import \"./style.css\";\n\n// // export default function App() {\n// //   return (\n// //     <div>\n// //       <TextExpander>\n// //         Space travel is the ultimate adventure! Imagine soaring past the stars\n// //         and exploring new worlds. It's the stuff of dreams and science fiction,\n// //         but believe it or not, space travel is a real thing. Humans and robots\n// //         are constantly venturing out into the cosmos to uncover its secrets and\n// //         push the boundaries of what's possible.\n// //       </TextExpander>\n\n// //       <TextExpander\n// //         collapsedNumWords={20}\n// //         expandButtonText=\"Show text\"\n// //         collapseButtonText=\"Collapse text\"\n// //         buttonColor=\"#ff6622\"\n// //       >\n// //         Space travel requires some seriously amazing technology and\n// //         collaboration between countries, private companies, and international\n// //         space organizations. And while it's not always easy (or cheap), the\n// //         results are out of this world. Think about the first time humans stepped\n// //         foot on the moon or when rovers were sent to roam around on Mars.\n// //       </TextExpander>\n\n// //       <TextExpander expanded={true} className=\"box\">\n// //         Space missions have given us incredible insights into our universe and\n// //         have inspired future generations to keep reaching for the stars. Space\n// //         travel is a pretty cool thing to think about. Who knows what we'll\n// //         discover next!\n// //       </TextExpander>\n// //     </div>\n// //   );\n// // }\n\n// // function TextExpander({\n// //   children,\n// //   collapsedNumWords = 10,\n// //   expandButtonText = \"Show more\",\n// //   collapseButtonText = \"Show less\",\n// //   buttonColor = \"#1f09cd\",\n// //   expanded = false,\n// //   className = \"\",\n// // }) {\n// //   const [isExpanded, setIsExpanded] = useState(expanded);\n// //   const displayText = isExpanded\n// //     ? children\n// //     : children.split(\" \").slice(0, collapsedNumWords).join(\" \") + \"...\";\n// //   const buttonStyle = {\n// //     border: \"none\",\n// //     backgroundColor: \"none\",\n// //     color: `${buttonColor}`,\n// //     marginLeft: \"6px\",\n// //     cursor: \"pointer\",\n// //     font: \"inherit\",\n// //   };\n// //   return (\n// //     <div className={className}>\n// //       <span>{displayText}</span>\n// //       <button style={buttonStyle} onClick={() => setIsExpanded((exp) => !exp)}>\n// //         {isExpanded ? collapseButtonText : expandButtonText}\n// //       </button>\n// //     </div>\n// //   );\n// // }\n\n// **********************************\n\n// `https://api.frankfurter.app/latest?amount=100&from=EUR&to=USD`\n\n// export default function App() {\n//   const [amount, setAmount] = useState(1);\n//   const [fromCurr, setFromCurr] = useState(\"USD\");\n//   const [toCurr, setToCurr] = useState(\"EUR\");\n//   const [output, setOutput] = useState(\"\");\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   useEffect(\n//     function () {\n//       async function fetchData() {\n//         if (toCurr === fromCurr) {\n//           setOutput(amount);\n//           return;\n//         }\n//         setIsLoading(true);\n//         const res = await fetch(\n//           `https://api.frankfurter.app/latest?amount=${amount}&from=${fromCurr}&to=${toCurr}`\n//         );\n//         const data = await res.json();\n\n//         setOutput(data.rates[toCurr].toFixed(3));\n//         setIsLoading(false);\n//       }\n//       fetchData();\n//     },\n//     [amount, fromCurr, toCurr]\n//   );\n\n//   return (\n//     <div>\n//       <input\n//         type=\"text\"\n//         value={amount}\n//         onChange={(e) => setAmount(+e.target.value)}\n//         disabled={isLoading}\n//       />\n//       <select\n//         value={fromCurr}\n//         onChange={(e) => setFromCurr(e.target.value)}\n//         disabled={isLoading}\n//       >\n//         <option value=\"USD\">USD</option>\n//         <option value=\"EUR\">EUR</option>\n//         <option value=\"CAD\">CAD</option>\n//         <option value=\"INR\">INR</option>\n//       </select>\n//       <select\n//         value={toCurr}\n//         onChange={(e) => setToCurr(e.target.value)}\n//         disabled={isLoading}\n//       >\n//         <option value=\"USD\">USD</option>\n//         <option value=\"EUR\">EUR</option>\n//         <option value=\"CAD\">CAD</option>\n//         <option value=\"INR\">INR</option>\n//       </select>\n//       <p>\n//         {output} {toCurr}\n//       </p>\n//     </div>\n//   );\n// }\n\n// *****************************\n\nimport { useState } from \"react\";\n\nfunction useGeolocation() {\n  const [error, setError] = useState(null);\n  const [position, setPosition] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  function getPosition() {\n    if (!navigator.geolocation)\n      return setError(\"Your browser does not support geolocation\");\n\n    setIsLoading(true);\n    navigator.geolocation.getCurrentPosition(\n      (pos) => {\n        setPosition({\n          lat: pos.coords.latitude,\n          lng: pos.coords.longitude,\n        });\n        setIsLoading(false);\n      },\n      (error) => {\n        setError(error.message);\n        setIsLoading(false);\n      }\n    );\n  }\n  return { error, position, isLoading, getPosition };\n}\n\nexport default function App() {\n  const [countClicks, setCountClicks] = useState(0);\n  const {\n    error,\n    position: { lat, lng },\n    isLoading,\n    getPosition,\n  } = useGeolocation();\n  // const { lat, lng } = position;\n\n  function handleClick() {\n    setCountClicks((count) => count + 1);\n    getPosition();\n  }\n\n  return (\n    <div>\n      <button onClick={handleClick} disabled={isLoading}>\n        Get my position\n      </button>\n\n      {isLoading && <p>Loading position...</p>}\n      {error && <p>{error}</p>}\n      {!isLoading && !error && lat && lng && (\n        <p>\n          Your GPS position:{\" \"}\n          <a\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            href={`https://www.openstreetmap.org/#map=16/${lat}/${lng}`}\n          >\n            {lat}, {lng}\n          </a>\n        </p>\n      )}\n\n      <p>You requested position {countClicks} times</p>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,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"},"metadata":{},"sourceType":"module","externalDependencies":[]}