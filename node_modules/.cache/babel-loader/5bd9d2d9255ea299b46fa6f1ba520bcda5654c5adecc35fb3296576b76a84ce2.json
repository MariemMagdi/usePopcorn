{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\usepopcorn\\\\src\\\\App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import { useEffect, useState } from \"react\";\n// import StarRating from \"./StarRating\";\n\n// const tempMovieData = [\n//   {\n//     imdbID: \"tt1375666\",\n//     Title: \"Inception\",\n//     Year: \"2010\",\n//     Poster:\n//       \"https://m.media-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_SX300.jpg\",\n//   },\n//   {\n//     imdbID: \"tt0133093\",\n//     Title: \"The Matrix\",\n//     Year: \"1999\",\n//     Poster:\n//       \"https://m.media-amazon.com/images/M/MV5BNzQzOTk3OTAtNDQ0Zi00ZTVkLWI0MTEtMDllZjNkYzNjNTc4L2ltYWdlXkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SX300.jpg\",\n//   },\n//   {\n//     imdbID: \"tt6751668\",\n//     Title: \"Parasite\",\n//     Year: \"2019\",\n//     Poster:\n//       \"https://m.media-amazon.com/images/M/MV5BYWZjMjk3ZTItODQ2ZC00NTY5LWE0ZDYtZTI3MjcwN2Q5NTVkXkEyXkFqcGdeQXVyODk4OTc3MTY@._V1_SX300.jpg\",\n//   },\n// ];\n\n// const tempWatchedData = [\n//   {\n//     imdbID: \"tt1375666\",\n//     Title: \"Inception\",\n//     Year: \"2010\",\n//     Poster:\n//       \"https://m.media-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_SX300.jpg\",\n//     runtime: 148,\n//     imdbRating: 8.8,\n//     userRating: 10,\n//   },\n//   {\n//     imdbID: \"tt0088763\",\n//     Title: \"Back to the Future\",\n//     Year: \"1985\",\n//     Poster:\n//       \"https://m.media-amazon.com/images/M/MV5BZmU0M2Y1OGUtZjIxNi00ZjBkLTg1MjgtOWIyNThiZWIwYjRiXkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_SX300.jpg\",\n//     runtime: 116,\n//     imdbRating: 8.5,\n//     userRating: 9,\n//   },\n// ];\n\n// const average = (arr) =>\n//   arr.reduce((acc, cur, i, arr) => acc + cur / arr.length, 0);\n\n// const KEY = \"c93a834b\";\n\n// export default function App() {\n//   const [query, setQuery] = useState(\"\");\n//   const [selectedId, setSelectedId] = useState(null);\n//   const [movies, setMovies] = useState([]);\n//   const [watched, setWatched] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(\"\");\n\n//   function handleSelectMovie(id) {\n//     setSelectedId((s) => (s === id ? null : id));\n//   }\n\n//   function handleCloseMovie() {\n//     setSelectedId(null);\n//   }\n\n//   function handleAddWatched(movie) {\n//     setWatched((s) => [...s, movie]);\n//   }\n\n//   function handleDeleteWatched(id) {\n//     setWatched((watched) => watched.filter((movie) => movie.imdbID !== id));\n//   }\n\n//   useEffect(\n//     function () {\n//       const controller = new AbortController();\n//       async function fetchMovies() {\n//         try {\n//           setError(\"\");\n//           setIsLoading(true);\n//           const res = await fetch(\n//             `http://www.omdbapi.com/?apikey=${KEY}&s=${query}`,\n//             { signal: controller.signal }\n//           );\n//           if (!res.ok)\n//             throw new Error(\"Something went wrong with fetching movies\");\n//           const data = await res.json();\n//           if (data.Response === \"False\") throw new Error(\"Movie not found!\");\n//           setMovies(data.Search);\n//           setError(\"\");\n//         } catch (err) {\n//           if (err.name !== \"AbortError\") setError(err.message);\n//         } finally {\n//           setIsLoading(false);\n//         }\n//       }\n//       if (query.length < 3) {\n//         setMovies([]);\n//         setError(\"\");\n//         return;\n//       }\n//       handleCloseMovie();\n//       fetchMovies();\n//       return function () {\n//         controller.abort();\n//       };\n//     },\n//     [query]\n//   );\n\n//   return (\n//     <>\n//       <Nav>\n//         <Search query={query} setQuery={setQuery} />\n//         <Numresults movies={movies} />\n//       </Nav>\n//       <Main>\n//         <Box>\n//           {isLoading && <Loader />}\n//           {!isLoading && !error && (\n//             <MovieList movies={movies} onSelectMovie={handleSelectMovie} />\n//           )}\n//           {error && <ErrorMsg msg={error} />}\n//         </Box>\n//         <Box>\n//           {selectedId ? (\n//             <MovieDetails\n//               id={selectedId}\n//               onCloseMovie={handleCloseMovie}\n//               onAddWatched={handleAddWatched}\n//               watched={watched}\n//             />\n//           ) : (\n//             <>\n//               <WatchedSummary watched={watched} />\n//               <WatchedMoviesList\n//                 watched={watched}\n//                 onDeleteWatched={handleDeleteWatched}\n//               />\n//             </>\n//           )}\n//         </Box>\n//       </Main>\n//     </>\n//   );\n// }\n\n// function Loader() {\n//   return <p className=\"loader\">Loading...</p>;\n// }\n\n// function ErrorMsg({ msg }) {\n//   return (\n//     <p className=\"error\">\n//       <span>‚õî</span> {msg}\n//     </p>\n//   );\n// }\n\n// function Nav({ children }) {\n//   return (\n//     <nav className=\"nav-bar\">\n//       <Logo />\n//       {children}\n//     </nav>\n//   );\n// }\n\n// function Logo() {\n//   return (\n//     <div className=\"logo\">\n//       <span role=\"img\">üçø</span>\n//       <h1>usePopcorn</h1>\n//     </div>\n//   );\n// }\n\n// function Search({ query, setQuery }) {\n//   return (\n//     <input\n//       className=\"search\"\n//       type=\"text\"\n//       placeholder=\"Search movies...\"\n//       value={query}\n//       onChange={(e) => setQuery(e.target.value)}\n//     />\n//   );\n// }\n\n// function Numresults({ movies }) {\n//   return (\n//     <p className=\"num-results\">\n//       Found <strong>{movies.length}</strong> results\n//     </p>\n//   );\n// }\n\n// function Main({ children }) {\n//   return <main className=\"main\">{children}</main>;\n// }\n\n// function Box({ children }) {\n//   const [isOpen, setIsOpen] = useState(true);\n\n//   return (\n//     <div className=\"box\">\n//       <button className=\"btn-toggle\" onClick={() => setIsOpen((open) => !open)}>\n//         {isOpen ? \"‚Äì\" : \"+\"}\n//       </button>\n//       {isOpen && children}\n//     </div>\n//   );\n// }\n\n// // function WatchedBox() {\n// //   const [isOpen2, setIsOpen2] = useState(true);\n\n// //   return (\n// //     <div className=\"box\">\n// //       <button\n// //         className=\"btn-toggle\"\n// //         onClick={() => setIsOpen2((open) => !open)}\n// //       >\n// //         {isOpen2 ? \"‚Äì\" : \"+\"}\n// //       </button>\n// //       {isOpen2 && (\n// //         <>\n\n// //         </>\n// //       )}\n// //     </div>\n// //   );\n// // }\n\n// function MovieList({ movies, onSelectMovie }) {\n//   return (\n//     <ul className=\"list list-movies\">\n//       {movies?.map((movie) => (\n//         <Movie movie={movie} key={movie.imdbID} onSelectMovie={onSelectMovie} />\n//       ))}\n//     </ul>\n//   );\n// }\n\n// function Movie({ movie, onSelectMovie }) {\n//   return (\n//     <li onClick={() => onSelectMovie(movie.imdbID)}>\n//       <img src={movie.Poster} alt={`${movie.Title} poster`} />\n//       <h3>{movie.Title}</h3>\n//       <div>\n//         <p>\n//           <span>üóì</span>\n//           <span>{movie.Year}</span>\n//         </p>\n//       </div>\n//     </li>\n//   );\n// }\n\n// function MovieDetails({ id, onCloseMovie, onAddWatched, watched }) {\n//   const [movie, setMovie] = useState({});\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [userRating, setUserRating] = useState(\"\");\n//   const isWatched = watched.map((movie) => movie.imdbID).includes(id);\n//   const {\n//     Title: title,\n//     Released: released,\n//     Runtime: runtime,\n//     Poster: poster,\n//     Plot: plot,\n//     imdbRating,\n//     Actors: actors,\n//     Director: director,\n//     Genre: genre,\n//   } = movie;\n\n//   function handleAddButton() {\n//     const newMovie = {\n//       title,\n//       poster,\n//       runtime: Number(runtime.split(\" \").at(0)),\n//       imdbRating: Number(imdbRating),\n//       imdbID: id,\n//       userRating,\n//     };\n//     onAddWatched(newMovie);\n//     onCloseMovie();\n//   }\n\n//   useEffect(\n//     function () {\n//       function callback(e) {\n//         if (e.code === \"Escape\") onCloseMovie();\n//       }\n//       document.addEventListener(\"keydown\", callback);\n//       return function () {\n//         document.removeEventListener(\"keydown\", callback);\n//       };\n//     },\n//     [onCloseMovie]\n//   );\n\n//   useEffect(\n//     function () {\n//       async function fetchById() {\n//         setIsLoading(true);\n//         const res = await fetch(\n//           `http://www.omdbapi.com/?apikey=${KEY}&i=${id}`\n//         );\n//         const data = await res.json();\n//         setMovie(data);\n//         setIsLoading(false);\n//       }\n//       fetchById();\n//     },\n//     [id]\n//   );\n\n//   useEffect(\n//     function () {\n//       if (!title) return;\n//       document.title = `Movie | ${title}`;\n//       return function () {\n//         document.title = \"usePopcorn\";\n//       };\n//     },\n//     [title]\n//   );\n\n//   return (\n//     <div className=\"details\">\n//       {isLoading ? (\n//         <Loader />\n//       ) : (\n//         <>\n//           <header>\n//             <button className=\"btn-back\" onClick={onCloseMovie}>\n//               &larr;\n//             </button>\n//             <img src={poster} alt={`image of ${title} movie`} />\n//             <div className=\"details-overview\">\n//               <h2>{title}</h2>\n//               <p>\n//                 {released} &bull; {runtime}\n//               </p>\n//               <p>{genre}</p>\n//               <p>\n//                 <span>‚≠ê</span>\n//                 {imdbRating} IMDB rating\n//               </p>\n//             </div>\n//           </header>\n//           <section>\n//             <div className=\"rating\">\n//               {isWatched ? (\n//                 <p>\n//                   You already rated this movie ‚≠ê\n//                   {watched.filter((movie) => movie.imdbID === id)[0].userRating}\n//                 </p>\n//               ) : (\n//                 <>\n//                   <StarRating\n//                     maxRating={10}\n//                     onSetRating={setUserRating}\n//                     size={24}\n//                   />\n//                   {userRating && (\n//                     <button className=\"btn-add\" onClick={handleAddButton}>\n//                       + Add to watched list\n//                     </button>\n//                   )}\n//                 </>\n//               )}\n//             </div>\n//             <p>\n//               <em>{plot}</em>\n//             </p>\n//             <p>Starring {actors}</p>\n//             <p>Directed by {director}</p>\n//           </section>\n//         </>\n//       )}\n//     </div>\n//   );\n// }\n\n// function WatchedSummary({ watched }) {\n//   const avgImdbRating = average(watched.map((movie) => movie.imdbRating));\n//   const avgUserRating = average(watched.map((movie) => movie.userRating));\n//   const avgRuntime = average(watched.map((movie) => movie.runtime));\n\n//   return (\n//     <div className=\"summary\">\n//       <h2>Movies you watched</h2>\n//       <div>\n//         <p>\n//           <span>#Ô∏è‚É£</span>\n//           <span>{watched.length} movies</span>\n//         </p>\n//         <p>\n//           <span>‚≠êÔ∏è</span>\n//           <span>{avgImdbRating.toFixed(2)}</span>\n//         </p>\n//         <p>\n//           <span>üåü</span>\n//           <span>{avgUserRating.toFixed(2)}</span>\n//         </p>\n//         <p>\n//           <span>‚è≥</span>\n//           <span>{avgRuntime} min</span>\n//         </p>\n//       </div>\n//     </div>\n//   );\n// }\n\n// function WatchedMoviesList({ watched, onDeleteWatched }) {\n//   return (\n//     <ul className=\"list\">\n//       {watched.map((movie) => (\n//         <WatchedMovie\n//           movie={movie}\n//           key={movie.imdbID}\n//           onDeleteWatched={onDeleteWatched}\n//         />\n//       ))}\n//     </ul>\n//   );\n// }\n\n// function WatchedMovie({ movie, onDeleteWatched }) {\n//   return (\n//     <li>\n//       <img src={movie.poster} alt={`${movie.title} poster`} />\n//       <h3>{movie.title}</h3>\n//       <div>\n//         <p>\n//           <span>‚≠êÔ∏è</span>\n//           <span>{movie.imdbRating}</span>\n//         </p>\n//         <p>\n//           <span>üåü</span>\n//           <span>{movie.userRating}</span>\n//         </p>\n//         <p>\n//           <span>‚è≥</span>\n//           <span>{movie.runtime} min</span>\n//         </p>\n//         <button\n//           className=\"btn-delete\"\n//           onClick={() => onDeleteWatched(movie.imdbID)}\n//         >\n//           X\n//         </button>\n//       </div>\n//     </li>\n//   );\n// }\n\n// // *********************************************\n\n// // import { useState } from \"react\";\n// // import \"./style.css\";\n\n// // export default function App() {\n// //   return (\n// //     <div>\n// //       <TextExpander>\n// //         Space travel is the ultimate adventure! Imagine soaring past the stars\n// //         and exploring new worlds. It's the stuff of dreams and science fiction,\n// //         but believe it or not, space travel is a real thing. Humans and robots\n// //         are constantly venturing out into the cosmos to uncover its secrets and\n// //         push the boundaries of what's possible.\n// //       </TextExpander>\n\n// //       <TextExpander\n// //         collapsedNumWords={20}\n// //         expandButtonText=\"Show text\"\n// //         collapseButtonText=\"Collapse text\"\n// //         buttonColor=\"#ff6622\"\n// //       >\n// //         Space travel requires some seriously amazing technology and\n// //         collaboration between countries, private companies, and international\n// //         space organizations. And while it's not always easy (or cheap), the\n// //         results are out of this world. Think about the first time humans stepped\n// //         foot on the moon or when rovers were sent to roam around on Mars.\n// //       </TextExpander>\n\n// //       <TextExpander expanded={true} className=\"box\">\n// //         Space missions have given us incredible insights into our universe and\n// //         have inspired future generations to keep reaching for the stars. Space\n// //         travel is a pretty cool thing to think about. Who knows what we'll\n// //         discover next!\n// //       </TextExpander>\n// //     </div>\n// //   );\n// // }\n\n// // function TextExpander({\n// //   children,\n// //   collapsedNumWords = 10,\n// //   expandButtonText = \"Show more\",\n// //   collapseButtonText = \"Show less\",\n// //   buttonColor = \"#1f09cd\",\n// //   expanded = false,\n// //   className = \"\",\n// // }) {\n// //   const [isExpanded, setIsExpanded] = useState(expanded);\n// //   const displayText = isExpanded\n// //     ? children\n// //     : children.split(\" \").slice(0, collapsedNumWords).join(\" \") + \"...\";\n// //   const buttonStyle = {\n// //     border: \"none\",\n// //     backgroundColor: \"none\",\n// //     color: `${buttonColor}`,\n// //     marginLeft: \"6px\",\n// //     cursor: \"pointer\",\n// //     font: \"inherit\",\n// //   };\n// //   return (\n// //     <div className={className}>\n// //       <span>{displayText}</span>\n// //       <button style={buttonStyle} onClick={() => setIsExpanded((exp) => !exp)}>\n// //         {isExpanded ? collapseButtonText : expandButtonText}\n// //       </button>\n// //     </div>\n// //   );\n// // }\n\n// `https://api.frankfurter.app/latest?amount=100&from=EUR&to=USD`\n\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"USD\",\n        children: \"USD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"EUR\",\n        children: \"EUR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"CAD\",\n        children: \"CAD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"INR\",\n        children: \"INR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"USD\",\n        children: \"USD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"EUR\",\n        children: \"EUR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"CAD\",\n        children: \"CAD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"INR\",\n        children: \"INR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"OUTPUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 540,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","_jsxDEV","children","type","fileName","_jsxFileName","lineNumber","columnNumber","value","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/Desktop/usepopcorn/src/App.js"],"sourcesContent":["// import { useEffect, useState } from \"react\";\n// import StarRating from \"./StarRating\";\n\n// const tempMovieData = [\n//   {\n//     imdbID: \"tt1375666\",\n//     Title: \"Inception\",\n//     Year: \"2010\",\n//     Poster:\n//       \"https://m.media-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_SX300.jpg\",\n//   },\n//   {\n//     imdbID: \"tt0133093\",\n//     Title: \"The Matrix\",\n//     Year: \"1999\",\n//     Poster:\n//       \"https://m.media-amazon.com/images/M/MV5BNzQzOTk3OTAtNDQ0Zi00ZTVkLWI0MTEtMDllZjNkYzNjNTc4L2ltYWdlXkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SX300.jpg\",\n//   },\n//   {\n//     imdbID: \"tt6751668\",\n//     Title: \"Parasite\",\n//     Year: \"2019\",\n//     Poster:\n//       \"https://m.media-amazon.com/images/M/MV5BYWZjMjk3ZTItODQ2ZC00NTY5LWE0ZDYtZTI3MjcwN2Q5NTVkXkEyXkFqcGdeQXVyODk4OTc3MTY@._V1_SX300.jpg\",\n//   },\n// ];\n\n// const tempWatchedData = [\n//   {\n//     imdbID: \"tt1375666\",\n//     Title: \"Inception\",\n//     Year: \"2010\",\n//     Poster:\n//       \"https://m.media-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_SX300.jpg\",\n//     runtime: 148,\n//     imdbRating: 8.8,\n//     userRating: 10,\n//   },\n//   {\n//     imdbID: \"tt0088763\",\n//     Title: \"Back to the Future\",\n//     Year: \"1985\",\n//     Poster:\n//       \"https://m.media-amazon.com/images/M/MV5BZmU0M2Y1OGUtZjIxNi00ZjBkLTg1MjgtOWIyNThiZWIwYjRiXkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_SX300.jpg\",\n//     runtime: 116,\n//     imdbRating: 8.5,\n//     userRating: 9,\n//   },\n// ];\n\n// const average = (arr) =>\n//   arr.reduce((acc, cur, i, arr) => acc + cur / arr.length, 0);\n\n// const KEY = \"c93a834b\";\n\n// export default function App() {\n//   const [query, setQuery] = useState(\"\");\n//   const [selectedId, setSelectedId] = useState(null);\n//   const [movies, setMovies] = useState([]);\n//   const [watched, setWatched] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(\"\");\n\n//   function handleSelectMovie(id) {\n//     setSelectedId((s) => (s === id ? null : id));\n//   }\n\n//   function handleCloseMovie() {\n//     setSelectedId(null);\n//   }\n\n//   function handleAddWatched(movie) {\n//     setWatched((s) => [...s, movie]);\n//   }\n\n//   function handleDeleteWatched(id) {\n//     setWatched((watched) => watched.filter((movie) => movie.imdbID !== id));\n//   }\n\n//   useEffect(\n//     function () {\n//       const controller = new AbortController();\n//       async function fetchMovies() {\n//         try {\n//           setError(\"\");\n//           setIsLoading(true);\n//           const res = await fetch(\n//             `http://www.omdbapi.com/?apikey=${KEY}&s=${query}`,\n//             { signal: controller.signal }\n//           );\n//           if (!res.ok)\n//             throw new Error(\"Something went wrong with fetching movies\");\n//           const data = await res.json();\n//           if (data.Response === \"False\") throw new Error(\"Movie not found!\");\n//           setMovies(data.Search);\n//           setError(\"\");\n//         } catch (err) {\n//           if (err.name !== \"AbortError\") setError(err.message);\n//         } finally {\n//           setIsLoading(false);\n//         }\n//       }\n//       if (query.length < 3) {\n//         setMovies([]);\n//         setError(\"\");\n//         return;\n//       }\n//       handleCloseMovie();\n//       fetchMovies();\n//       return function () {\n//         controller.abort();\n//       };\n//     },\n//     [query]\n//   );\n\n//   return (\n//     <>\n//       <Nav>\n//         <Search query={query} setQuery={setQuery} />\n//         <Numresults movies={movies} />\n//       </Nav>\n//       <Main>\n//         <Box>\n//           {isLoading && <Loader />}\n//           {!isLoading && !error && (\n//             <MovieList movies={movies} onSelectMovie={handleSelectMovie} />\n//           )}\n//           {error && <ErrorMsg msg={error} />}\n//         </Box>\n//         <Box>\n//           {selectedId ? (\n//             <MovieDetails\n//               id={selectedId}\n//               onCloseMovie={handleCloseMovie}\n//               onAddWatched={handleAddWatched}\n//               watched={watched}\n//             />\n//           ) : (\n//             <>\n//               <WatchedSummary watched={watched} />\n//               <WatchedMoviesList\n//                 watched={watched}\n//                 onDeleteWatched={handleDeleteWatched}\n//               />\n//             </>\n//           )}\n//         </Box>\n//       </Main>\n//     </>\n//   );\n// }\n\n// function Loader() {\n//   return <p className=\"loader\">Loading...</p>;\n// }\n\n// function ErrorMsg({ msg }) {\n//   return (\n//     <p className=\"error\">\n//       <span>‚õî</span> {msg}\n//     </p>\n//   );\n// }\n\n// function Nav({ children }) {\n//   return (\n//     <nav className=\"nav-bar\">\n//       <Logo />\n//       {children}\n//     </nav>\n//   );\n// }\n\n// function Logo() {\n//   return (\n//     <div className=\"logo\">\n//       <span role=\"img\">üçø</span>\n//       <h1>usePopcorn</h1>\n//     </div>\n//   );\n// }\n\n// function Search({ query, setQuery }) {\n//   return (\n//     <input\n//       className=\"search\"\n//       type=\"text\"\n//       placeholder=\"Search movies...\"\n//       value={query}\n//       onChange={(e) => setQuery(e.target.value)}\n//     />\n//   );\n// }\n\n// function Numresults({ movies }) {\n//   return (\n//     <p className=\"num-results\">\n//       Found <strong>{movies.length}</strong> results\n//     </p>\n//   );\n// }\n\n// function Main({ children }) {\n//   return <main className=\"main\">{children}</main>;\n// }\n\n// function Box({ children }) {\n//   const [isOpen, setIsOpen] = useState(true);\n\n//   return (\n//     <div className=\"box\">\n//       <button className=\"btn-toggle\" onClick={() => setIsOpen((open) => !open)}>\n//         {isOpen ? \"‚Äì\" : \"+\"}\n//       </button>\n//       {isOpen && children}\n//     </div>\n//   );\n// }\n\n// // function WatchedBox() {\n// //   const [isOpen2, setIsOpen2] = useState(true);\n\n// //   return (\n// //     <div className=\"box\">\n// //       <button\n// //         className=\"btn-toggle\"\n// //         onClick={() => setIsOpen2((open) => !open)}\n// //       >\n// //         {isOpen2 ? \"‚Äì\" : \"+\"}\n// //       </button>\n// //       {isOpen2 && (\n// //         <>\n\n// //         </>\n// //       )}\n// //     </div>\n// //   );\n// // }\n\n// function MovieList({ movies, onSelectMovie }) {\n//   return (\n//     <ul className=\"list list-movies\">\n//       {movies?.map((movie) => (\n//         <Movie movie={movie} key={movie.imdbID} onSelectMovie={onSelectMovie} />\n//       ))}\n//     </ul>\n//   );\n// }\n\n// function Movie({ movie, onSelectMovie }) {\n//   return (\n//     <li onClick={() => onSelectMovie(movie.imdbID)}>\n//       <img src={movie.Poster} alt={`${movie.Title} poster`} />\n//       <h3>{movie.Title}</h3>\n//       <div>\n//         <p>\n//           <span>üóì</span>\n//           <span>{movie.Year}</span>\n//         </p>\n//       </div>\n//     </li>\n//   );\n// }\n\n// function MovieDetails({ id, onCloseMovie, onAddWatched, watched }) {\n//   const [movie, setMovie] = useState({});\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [userRating, setUserRating] = useState(\"\");\n//   const isWatched = watched.map((movie) => movie.imdbID).includes(id);\n//   const {\n//     Title: title,\n//     Released: released,\n//     Runtime: runtime,\n//     Poster: poster,\n//     Plot: plot,\n//     imdbRating,\n//     Actors: actors,\n//     Director: director,\n//     Genre: genre,\n//   } = movie;\n\n//   function handleAddButton() {\n//     const newMovie = {\n//       title,\n//       poster,\n//       runtime: Number(runtime.split(\" \").at(0)),\n//       imdbRating: Number(imdbRating),\n//       imdbID: id,\n//       userRating,\n//     };\n//     onAddWatched(newMovie);\n//     onCloseMovie();\n//   }\n\n//   useEffect(\n//     function () {\n//       function callback(e) {\n//         if (e.code === \"Escape\") onCloseMovie();\n//       }\n//       document.addEventListener(\"keydown\", callback);\n//       return function () {\n//         document.removeEventListener(\"keydown\", callback);\n//       };\n//     },\n//     [onCloseMovie]\n//   );\n\n//   useEffect(\n//     function () {\n//       async function fetchById() {\n//         setIsLoading(true);\n//         const res = await fetch(\n//           `http://www.omdbapi.com/?apikey=${KEY}&i=${id}`\n//         );\n//         const data = await res.json();\n//         setMovie(data);\n//         setIsLoading(false);\n//       }\n//       fetchById();\n//     },\n//     [id]\n//   );\n\n//   useEffect(\n//     function () {\n//       if (!title) return;\n//       document.title = `Movie | ${title}`;\n//       return function () {\n//         document.title = \"usePopcorn\";\n//       };\n//     },\n//     [title]\n//   );\n\n//   return (\n//     <div className=\"details\">\n//       {isLoading ? (\n//         <Loader />\n//       ) : (\n//         <>\n//           <header>\n//             <button className=\"btn-back\" onClick={onCloseMovie}>\n//               &larr;\n//             </button>\n//             <img src={poster} alt={`image of ${title} movie`} />\n//             <div className=\"details-overview\">\n//               <h2>{title}</h2>\n//               <p>\n//                 {released} &bull; {runtime}\n//               </p>\n//               <p>{genre}</p>\n//               <p>\n//                 <span>‚≠ê</span>\n//                 {imdbRating} IMDB rating\n//               </p>\n//             </div>\n//           </header>\n//           <section>\n//             <div className=\"rating\">\n//               {isWatched ? (\n//                 <p>\n//                   You already rated this movie ‚≠ê\n//                   {watched.filter((movie) => movie.imdbID === id)[0].userRating}\n//                 </p>\n//               ) : (\n//                 <>\n//                   <StarRating\n//                     maxRating={10}\n//                     onSetRating={setUserRating}\n//                     size={24}\n//                   />\n//                   {userRating && (\n//                     <button className=\"btn-add\" onClick={handleAddButton}>\n//                       + Add to watched list\n//                     </button>\n//                   )}\n//                 </>\n//               )}\n//             </div>\n//             <p>\n//               <em>{plot}</em>\n//             </p>\n//             <p>Starring {actors}</p>\n//             <p>Directed by {director}</p>\n//           </section>\n//         </>\n//       )}\n//     </div>\n//   );\n// }\n\n// function WatchedSummary({ watched }) {\n//   const avgImdbRating = average(watched.map((movie) => movie.imdbRating));\n//   const avgUserRating = average(watched.map((movie) => movie.userRating));\n//   const avgRuntime = average(watched.map((movie) => movie.runtime));\n\n//   return (\n//     <div className=\"summary\">\n//       <h2>Movies you watched</h2>\n//       <div>\n//         <p>\n//           <span>#Ô∏è‚É£</span>\n//           <span>{watched.length} movies</span>\n//         </p>\n//         <p>\n//           <span>‚≠êÔ∏è</span>\n//           <span>{avgImdbRating.toFixed(2)}</span>\n//         </p>\n//         <p>\n//           <span>üåü</span>\n//           <span>{avgUserRating.toFixed(2)}</span>\n//         </p>\n//         <p>\n//           <span>‚è≥</span>\n//           <span>{avgRuntime} min</span>\n//         </p>\n//       </div>\n//     </div>\n//   );\n// }\n\n// function WatchedMoviesList({ watched, onDeleteWatched }) {\n//   return (\n//     <ul className=\"list\">\n//       {watched.map((movie) => (\n//         <WatchedMovie\n//           movie={movie}\n//           key={movie.imdbID}\n//           onDeleteWatched={onDeleteWatched}\n//         />\n//       ))}\n//     </ul>\n//   );\n// }\n\n// function WatchedMovie({ movie, onDeleteWatched }) {\n//   return (\n//     <li>\n//       <img src={movie.poster} alt={`${movie.title} poster`} />\n//       <h3>{movie.title}</h3>\n//       <div>\n//         <p>\n//           <span>‚≠êÔ∏è</span>\n//           <span>{movie.imdbRating}</span>\n//         </p>\n//         <p>\n//           <span>üåü</span>\n//           <span>{movie.userRating}</span>\n//         </p>\n//         <p>\n//           <span>‚è≥</span>\n//           <span>{movie.runtime} min</span>\n//         </p>\n//         <button\n//           className=\"btn-delete\"\n//           onClick={() => onDeleteWatched(movie.imdbID)}\n//         >\n//           X\n//         </button>\n//       </div>\n//     </li>\n//   );\n// }\n\n// // *********************************************\n\n// // import { useState } from \"react\";\n// // import \"./style.css\";\n\n// // export default function App() {\n// //   return (\n// //     <div>\n// //       <TextExpander>\n// //         Space travel is the ultimate adventure! Imagine soaring past the stars\n// //         and exploring new worlds. It's the stuff of dreams and science fiction,\n// //         but believe it or not, space travel is a real thing. Humans and robots\n// //         are constantly venturing out into the cosmos to uncover its secrets and\n// //         push the boundaries of what's possible.\n// //       </TextExpander>\n\n// //       <TextExpander\n// //         collapsedNumWords={20}\n// //         expandButtonText=\"Show text\"\n// //         collapseButtonText=\"Collapse text\"\n// //         buttonColor=\"#ff6622\"\n// //       >\n// //         Space travel requires some seriously amazing technology and\n// //         collaboration between countries, private companies, and international\n// //         space organizations. And while it's not always easy (or cheap), the\n// //         results are out of this world. Think about the first time humans stepped\n// //         foot on the moon or when rovers were sent to roam around on Mars.\n// //       </TextExpander>\n\n// //       <TextExpander expanded={true} className=\"box\">\n// //         Space missions have given us incredible insights into our universe and\n// //         have inspired future generations to keep reaching for the stars. Space\n// //         travel is a pretty cool thing to think about. Who knows what we'll\n// //         discover next!\n// //       </TextExpander>\n// //     </div>\n// //   );\n// // }\n\n// // function TextExpander({\n// //   children,\n// //   collapsedNumWords = 10,\n// //   expandButtonText = \"Show more\",\n// //   collapseButtonText = \"Show less\",\n// //   buttonColor = \"#1f09cd\",\n// //   expanded = false,\n// //   className = \"\",\n// // }) {\n// //   const [isExpanded, setIsExpanded] = useState(expanded);\n// //   const displayText = isExpanded\n// //     ? children\n// //     : children.split(\" \").slice(0, collapsedNumWords).join(\" \") + \"...\";\n// //   const buttonStyle = {\n// //     border: \"none\",\n// //     backgroundColor: \"none\",\n// //     color: `${buttonColor}`,\n// //     marginLeft: \"6px\",\n// //     cursor: \"pointer\",\n// //     font: \"inherit\",\n// //   };\n// //   return (\n// //     <div className={className}>\n// //       <span>{displayText}</span>\n// //       <button style={buttonStyle} onClick={() => setIsExpanded((exp) => !exp)}>\n// //         {isExpanded ? collapseButtonText : expandButtonText}\n// //       </button>\n// //     </div>\n// //   );\n// // }\n\n// `https://api.frankfurter.app/latest?amount=100&from=EUR&to=USD`\n\nexport default function App() {\n  return (\n    <div>\n      <input type=\"text\" />\n      <select>\n        <option value=\"USD\">USD</option>\n        <option value=\"EUR\">EUR</option>\n        <option value=\"CAD\">CAD</option>\n        <option value=\"INR\">INR</option>\n      </select>\n      <select>\n        <option value=\"USD\">USD</option>\n        <option value=\"EUR\">EUR</option>\n        <option value=\"CAD\">CAD</option>\n        <option value=\"INR\">INR</option>\n      </select>\n      <p>OUTPUT</p>\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,eAAe,SAASA,GAAGA,CAAA,EAAG;EAC5B,oBACEC,OAAA;IAAAC,QAAA,gBACED,OAAA;MAAOE,IAAI,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrBN,OAAA;MAAAC,QAAA,gBACED,OAAA;QAAQO,KAAK,EAAC,KAAK;QAAAN,QAAA,EAAC;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChCN,OAAA;QAAQO,KAAK,EAAC,KAAK;QAAAN,QAAA,EAAC;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChCN,OAAA;QAAQO,KAAK,EAAC,KAAK;QAAAN,QAAA,EAAC;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChCN,OAAA;QAAQO,KAAK,EAAC,KAAK;QAAAN,QAAA,EAAC;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACTN,OAAA;MAAAC,QAAA,gBACED,OAAA;QAAQO,KAAK,EAAC,KAAK;QAAAN,QAAA,EAAC;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChCN,OAAA;QAAQO,KAAK,EAAC,KAAK;QAAAN,QAAA,EAAC;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChCN,OAAA;QAAQO,KAAK,EAAC,KAAK;QAAAN,QAAA,EAAC;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChCN,OAAA;QAAQO,KAAK,EAAC,KAAK;QAAAN,QAAA,EAAC;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACTN,OAAA;MAAAC,QAAA,EAAG;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV;AAACE,EAAA,GAnBuBT,GAAG;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}